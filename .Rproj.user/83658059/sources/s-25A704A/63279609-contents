---
title: "Assignment 1"
author: "Rory"
date: "23 July 2020"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
```

## Question 1

```{r question1}
my_rbinom <- function(n, size, prob) {
  sapply(seq_len(n), function(x) sum(ifelse(runif(size) <= prob, 1, 0)))
}
rb <- my_rbinom(1e5, 10, 0.4)
head(rb)
```

## Question 2

```{r question2}

my_beta <- function(n, alpha, beta) {
  params <- c(alpha = alpha, beta = beta)
  x <- rep_len(NA_real_, length.out = n)
  count <- 1
  
  while (count <= n) {
    u <- runif(2)
    v <- u^(1/params)
    w <- sum(u^(1/params))
    if (w <= 1) {
      x[count] <- v[1]/w
      count <- count + 1
    }
  }
  return(x)
}

n <- 1000
alpha <- 2
beta <- 0.5

beta_values <- data.frame(
  values = c(my_beta(n, alpha, beta), rbeta(n, alpha, beta)),
  source = c(rep_len("my_rbeta", n), rep_len("rbeta", n)))

ggplot() + 
  geom_histogram(data = beta_values, 
                 mapping = aes(x = values, y =..density.., fill = "cornflowerblue"),
                 colour = "black", binwidth = 0.01) +
  ggtitle("Comparing density of values generated by custom\nBeta function and R standard Beta function") +
  theme_bw() +
  stat_function(data = (data.frame(x = seq(0, 1, length.out = 100))),
                        aes(x = x, colour = "red"), 
                        fun = dbeta, n = 100, args = list(shape1 = alpha, shape2 = beta), size = 1) +
  scale_colour_manual("", values = c("red" = "red"), labels = "dbeta") +
  scale_fill_manual("", values = c("cornflowerblue" = "cornflowerblue"), labels = "my_rbeta")

```

## Question 3

$$ F(X) = u = 1 - \exp{(-\eta(e^{(bx)} - 1))} $$

$$ 1 - u = \exp{(-\eta(e^{(bx)} - 1))} $$
$$ \log(1 - u) = -\eta(e^{(bx)} - 1) $$
$$ 1 - \dfrac{\log(1 - u)}{\eta} = e^{bx} $$

$$ \log{(1 - \dfrac{\log(1 - u)}{\eta} + 1)}/b = x $$

```{r gompertz, message=FALSE}
my_rgompertz <- function(n, shape, scale) log(1 - (log(1 - runif(n))/shape))/scale
my_rgompertz(10, 0.1, 1)

```

what's up with the order of arguments????

```{r gompertz_compare}
shape = 0.1
scale = 1
n = 2000
compare <- data.frame(
  value = c(my_rgompertz(n, shape, scale), reliaR::rgompertz(n, scale, shape)),
  source = c(rep_len("mine", n), rep_len("standard", n))
)

ggplot(data = compare, aes(x = value, fill = source)) + geom_histogram(position = "dodge")

system.time(my_rgompertz(n, shape, scale))
system.time(reliaR::rgompertz(n, scale, shape))

mbm <- microbenchmark::microbenchmark(
  {
    my_rgompertz(n, shape, scale)
  },
  {
    reliaR::rgompertz(n, scale, shape)
  }
)
ggplot2::autoplot(mbm)
```

## Question 4

$$ f(x) = \dfrac{e^{-x}}{1 - e^{-a}}$$

Therefore

$$ F(x) = u = \dfrac{e^{-x}}{e^{-a} - 1}$$

$$ u(e^{-a} - 1) = e^{-x} $$

$$ -\log(u(e^{-a} - 1)) = x $$

Write algorithm

```{r trunc_exp}
n <- 5
a = 10
u <- 0.222222


1 - exp(-a)

my_trunc_exp <- function(n, a) -log(runif(n) * (exp(-a) - 1) * -1)
my_trunc_exp(5, 10)

?rexp

```